from manimlib.imports import*
class withaxes(Scene):
    def construct(self):
        axes=Axes()
        cir=Circle()
        dot=Dot()
        A=TextMobject("A")
        A.next_to(dot,RIGHT)
        dot.shift(np.sqrt(3)*0.5*RIGHT+0.5*UP)
        prj=np.array([np.sqrt(3)/2,0,0])
        arw=Arrow(np.array([0,0,0]),dot.get_center(),buff=0.0)
        vec=VGroup(arw,dot)
        line=DashedLine(dot.get_center(),prj)
        #prj.add_updater(lambda x: x.align_to(dot,RIGHT))
        A.add_updater(lambda z: z.next_to(dot,RIGHT))
        line.add_updater(lambda d: d.put_start_and_end_on(dot.get_center(),prj))
        self.play(ShowCreation(axes))
        self.play(FadeIn(cir),FadeIn(vec))
        self.add(line,dot)
        self.play(FadeIn(A))
        self.wait(1)
        self.play(Rotating(vec),about_point=np.array([0,0,0]),radians=7*PI/3)
        self.wait(1)
class tgthalf(Scene):
    def construct(self):
        grade=TextMobject("利用","学前班","学过的圆周角定理")
        grade[1].set_color(MAROON_D)
        grade.move_to(np.array([2.5,3.5,0]))
        angleB=TexMobject("\\angle B={\\theta\\over{2}}")
        angleB.next_to(grade,DOWN)
        semble=TextMobject("易得$\\bigtriangleup AHC\\sim\\bigtriangleup BHA$")
        thfore=TexMobject("\\therefore\\angle HAC={\\theta\\over{2}}")
        semble.move_to(grade)
        thfore.move_to(semble)
        equation=TexMobject("\\tan{\\alpha\\over{2}}=","{\\sin\\alpha\\over{1+\\cos\\alpha}}",
                            "=","{{1-\\cos\\alpha}\\over{\\sin\\alpha}}")
        equation.scale(0.7)
        equation.move_to(np.array([3,2.5,0]))
        section1=TexMobject("AH","\\over{BH}")
        section1[0].set_color(TEAL_B)
        section1[1].set_color(RED)
        section2=TexMobject("CH","\\over{AH}")
        section2[0].set_color(PURPLE_A)
        section2[1].set_color(TEAL_B)
        section1.move_to(equation[1])
        section2.move_to(equation[3])
        dotO=Dot()
        dotO.shift(3*LEFT)
        markO=TextMobject("O")
        markO.next_to(dotO,DOWN)
        markO.match_color(dotO)
        cl=Circle(arc_center=3*LEFT,
                  radius=3,
                  stroke_width=5.2,
                  stroke_color=BLUE,
                  fill_opacity=0)
        dot1=Dot()
        dot1.set_color(ORANGE)
        dot1.shift(1.5*LEFT+1.5*np.sqrt(3)*UP)
        markA=TextMobject("A")
        markA.match_color(dot1)
        markA.next_to(dot1,UP)
        dot2=Dot()
        dot2.set_color(BLUE)
        dot2.shift(1.5*LEFT)
        markH=TextMobject("H")
        markH.match_color(dot2)
        markH.next_to(dot2,DOWN)
        leftpoint=np.array([-6,0,0])
        rightpoint=np.array([0,0,0])
        dotB=Dot(fill_color=YELLOW)
        dotB.move_to(leftpoint)
        dotC=Dot(fill_color=PURPLE)
        dotC.move_to(rightpoint)
        markB=TextMobject("B")
        markB.match_color(dotB)
        markB.next_to(dotB,LEFT)
        markC=TextMobject("C")
        markC.match_color(dotC)
        markC.next_to(dotC,RIGHT)
        diamiter=Line(leftpoint,rightpoint)
        diamiter.set_color(GREEN)
        R=Line(np.array([-3,0,0]),dot1.get_center())
        leftline=Line(leftpoint,dot1.get_center())
        rightline=Line(rightpoint,dot1.get_center())
        vertical=Line(dot1.get_center(),dot2.get_center())
        vertical.set_color(TEAL_B)
        strghtNt=Rectangle(height=0.3,width=0.3,opacity=0,stroke_color=PURPLE_B)
        strghtNt.shift(0.15*UP)
        strghtNt.align_to(vertical,LEFT)
        leftline.set_color(YELLOW)
        rightline.set_color(PURPLE)
        vector=VGroup(R,dot1)
        theta=TexMobject("\\theta")
        halftheta1=TexMobject("\\theta\\over{2}")
        halftheta2=TexMobject("\\theta\\over{2}")
        theta.scale(0.7)
        halftheta1.scale(0.49)
        halftheta2.scale(0.49)
        halftheta1.set_color(GOLD_D)
        halftheta2.match_color(halftheta1)
        theta.match_color(halftheta1)
        theta.move_to(np.array([-2.6,0.2,0]))
        halftheta1.shift(np.array([-5.3,0.2,0]))
        halftheta2.shift(np.array([-1.3,2.1,0]))
        orangetri=Polygon(np.array([-1.5,1.5*np.sqrt(3),0]),np.array([-1.5,0,0]),ORIGIN)
        orangetri.set_fill(color=ORANGE,opacity=0.4)
        orangetri.set_stroke(color=ORANGE,width=2)
        lineBH=Line(dotB.get_center(),dot2.get_center(),stroke_width=8)
        lineBH.set_color(RED)
        lineCH=Line(dotC.get_center(),dot2.get_center(),stroke_width=8)
        lineCH.set_color(PURPLE_A)
        lineAH1=Line(dot1.get_center(),dot2.get_center(),stroke_width=8)
        lineAH1.set_color(TEAL_B)
        lineAH2=Line(dot1.get_center(),dot2.get_center(),stroke_width=8)
        lineAH2.set_color(TEAL_B)
        markA.add_updater(lambda mk: mk.next_to(dot1,UP))
        leftline.add_updater(lambda l: l.put_start_and_end_on(leftpoint,dot1.get_center()))
        rightline.add_updater(lambda s: s.put_start_and_end_on(rightpoint,dot1.get_center()))
        dot2.add_updater(lambda a: a.align_to(dot1,LEFT))
        vertical.add_updater(lambda v: v.put_start_and_end_on(dot1.get_center(),dot2.get_center()))
        lineBH.add_updater(lambda bh: bh.put_start_and_end_on(dotB.get_center(),dot2.get_center()))
        lineCH.add_updater(lambda ch: ch.put_start_and_end_on(dotC.get_center(),dot2.get_center()))
        markH.add_updater(lambda h: h.next_to(dot2,DOWN))
        strghtNt.add_updater(lambda note: note.align_to(vertical,LEFT))
        self.play(ShowCreation(cl))
        self.play(ShowCreation(diamiter))
        self.play(ShowCreation(R))
        self.play(FadeIn(dotO),FadeIn(markO))
        self.play(FadeIn(dot1),FadeIn(markA))
        self.play(ShowCreation(leftline))
        self.play(ShowCreation(rightline))
        self.play(ShowCreation(dotB),FadeIn(markB))
        self.play(ShowCreation(dotC),FadeIn(markC))
        self.play(ShowCreation(dot2),FadeIn(markH))
        self.play(ShowCreation(vertical))
        self.play(ShowCreation(strghtNt))
        self.play(ShowCreation(lineBH),ShowCreation(lineCH))
        self.play(Rotating(vector),about_point=np.array([-3,0,0]),radians=PI/3,run_time=3)
        self.play(Rotating(vector),about_point=np.array([-3,0,0]),radians=-PI/3,run_time=3)
        self.play(Write(theta))
        self.play(Write(halftheta1))
        self.play(Write(grade))
        self.play(ShowCreation(angleB))
        self.play(DrawBorderThenFill(orangetri))
        self.play(FadeOut(grade),Transform(angleB,semble))
        self.play(Rotating(orangetri),about_point=np.array([-1.5,0,0]),radians=PI/2)
        self.play(orangetri.scale,np.sqrt(3),{"about_point": np.array([-1.5,0,0])})
        self.play(FadeOut(orangetri))
        self.play(Transform(angleB,thfore))
        self.play(FadeIn(halftheta2))
        self.play(FadeOut(angleB))
        self.play(FadeIn(lineAH1),FadeIn(lineAH2))
        lineBH.clear_updaters()
        lineCH.clear_updaters()
        self.play(FadeIn(equation[0]))
        self.play(ReplacementTransform(lineAH1,section1[0]),run_time=2)
        self.play(ReplacementTransform(lineBH,section1[1]),run_time=2)
        self.wait(1)
        self.play(Transform(section1,equation[1]))
        self.play(FadeIn(equation[2]))
        self.play(ReplacementTransform(lineCH,section2[0]),run_time=2)
        self.play(ReplacementTransform(lineAH2,section2[1]),run_time=2)
        self.wait(1)
        self.play(Transform(section2,equation[3]))
        self.wait(2)
class newlineintex(Scene):
    def construct(self):
        #formula=TexMobject("\\tan{\\alpha\\over{2}}=","{\\sin\\alpha\\over{1+\\cos\\alpha}}","={{1-\\cos\\alpha}\\over{\\sin\\alpha}}")
        formula=TexMobject("AH","\\over{BH}")
        formula[0].set_color(TEAL_B)
        formula[1].set_color(RED)
        cosdouble=TexMobject("\\cos2\\alpha=\\cos^2\\alpha-\\sin^2\\alpha\\\\=1-2\\sin^2\\alpha")
        cosdouble.set_color(YELLOW)
        cosdouble.move_to(np.array([2,3,0]))
        self.play(ShowCreation(formula[0]))
        self.play(ShowCreation(formula[1]))
        self.play(DrawBorderThenFill(cosdouble))